/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.QuanLyChiTietHoaDonBUS;
import BUS.QuanLyHoaDonBUS;
import BUS.QuanLyKhachHangBUS;
import BUS.QuanLyNhanVienBUS;
import BUS.WritePDF;
import BUS.XuatExcel;
import DTO.HoaDon;
import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dangk
 */
public class HoaDonPanel extends javax.swing.JPanel {
    private DefaultTableModel mdtb1;
    private QuanLyHoaDonBUS qlhd = new QuanLyHoaDonBUS();
    QuanLyNhanVienBUS qlnvBUS = new QuanLyNhanVienBUS();
    QuanLyKhachHangBUS qlkhBUS = new QuanLyKhachHangBUS();
    DatePicker dPicker1;
    DatePicker dPicker2;
    /**
     * Creates new form SanPhamPanel
     */
    public HoaDonPanel() {
        
        DatePickerSettings pickerSettings = new DatePickerSettings();
        pickerSettings.setVisibleDateTextField(false);
        dPicker1 = new DatePicker(pickerSettings);
        dPicker2 = new DatePicker(pickerSettings.copySettings());
        
        ImageIcon dPickerIcon = new ImageIcon(getClass().getResource("/giaodienchuan/images/icons8_calendar_31_30px.png"));
        JButton dp1 = dPicker1.getComponentToggleCalendarButton();
        JButton dp2 = dPicker2.getComponentToggleCalendarButton();
        
        dp1.setBackground(new java.awt.Color(204, 204, 204));
        dp1.setIcon(dPickerIcon);
        dp1.setText("");
        
        dp2.setBackground(new java.awt.Color(204, 204, 204));
        dp2.setIcon(dPickerIcon);
        dp2.setText("");
        
        initComponents();
        
        dPicker1.addDateChangeListener((dce) -> {
            tfKhoangNgay1.setText(dPicker1.getDateStringOrEmptyString());
        });
        dPicker2.addDateChangeListener((dce) -> {
            tfKhoangNgay2.setText(dPicker2.getDateStringOrEmptyString());
        });

        mdtb1 = (DefaultTableModel) tbHoaDon.getModel();
        setDataToTable(qlhd.getDshd());
        
        tbHoaDon.addMouseListener(new MouseAdapter() { 
            public void mouseReleased(MouseEvent me) {
                String mahd = (String) tbHoaDon.getValueAt(tbHoaDon.getSelectedRow(), 1);
                if (mahd != null) {
                    showInfo(mahd);
                }
            }
        });
        
        
        addDocumentListener(tfTim);
        addDocumentListener(tfKhoangNgay1);
        addDocumentListener(tfKhoangNgay2);
        addDocumentListener(tfKhoangTien1);
        addDocumentListener(tfKhoangTien2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        btnNhapExcel = new javax.swing.JButton();
        btnPrintPDF = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        cbTypeSearch = new javax.swing.JComboBox<>();
        tfTim = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        tfKhoangNgay1 = new javax.swing.JTextField();
        tfKhoangNgay2 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        tfKhoangTien2 = new javax.swing.JTextField();
        tfKhoangTien1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        tfMaHoaDon = new javax.swing.JTextField();
        tfNhanVien = new javax.swing.JTextField();
        tfKhachHang = new javax.swing.JTextField();
        tfTongTien = new javax.swing.JTextField();
        tfNgayLap = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1110, 800));
        setPreferredSize(new java.awt.Dimension(1110, 800));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(46, 134, 222));
        jPanel2.setPreferredSize(new java.awt.Dimension(1120, 55));

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setForeground(new java.awt.Color(0, 255, 0));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giaodienchuan/images/icons8-add-property-30.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setFocusable(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel2.add(btnThem);

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setForeground(new java.awt.Color(255, 0, 0));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giaodienchuan/images/icons8-delete-bin-30.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setFocusable(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btnXoa);

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setForeground(new java.awt.Color(0, 0, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giaodienchuan/images/icons8-support-30.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setFocusable(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel2.add(btnSua);

        btnXuatExcel.setBackground(new java.awt.Color(255, 255, 255));
        btnXuatExcel.setForeground(new java.awt.Color(0, 255, 0));
        btnXuatExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giaodienchuan/images/icons8-microsoft-excel-30.png"))); // NOI18N
        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.setFocusable(false);
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });
        jPanel2.add(btnXuatExcel);

        btnNhapExcel.setBackground(new java.awt.Color(255, 255, 255));
        btnNhapExcel.setForeground(new java.awt.Color(0, 255, 0));
        btnNhapExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/giaodienchuan/images/icons8-microsoft-excel-30.png"))); // NOI18N
        btnNhapExcel.setText("Nhập Excel");
        btnNhapExcel.setFocusable(false);
        btnNhapExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapExcelActionPerformed(evt);
            }
        });
        jPanel2.add(btnNhapExcel);

        btnPrintPDF.setBackground(new java.awt.Color(204, 204, 204));
        btnPrintPDF.setText("In PDF");
        btnPrintPDF.setFocusable(false);
        btnPrintPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintPDFActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrintPDF);

        add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(1249, 80));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tìm kiếm"));
        jPanel4.setPreferredSize(new java.awt.Dimension(280, 70));
        jPanel4.setLayout(null);

        cbTypeSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Mã hóa đơn", "Mã nhân viên", "Mã khuyến mãi", "Mã khách hàng", "Ngày lập", "Giờ lập", "Tổng tiền" }));
        cbTypeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeSearchActionPerformed(evt);
            }
        });
        jPanel4.add(cbTypeSearch);
        cbTypeSearch.setBounds(20, 30, 100, 20);

        tfTim.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tất cả"));
        tfTim.setPreferredSize(new java.awt.Dimension(130, 36));
        jPanel4.add(tfTim);
        tfTim.setBounds(130, 20, 140, 36);

        jPanel3.add(jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ngày lập"));
        jPanel5.setPreferredSize(new java.awt.Dimension(295, 70));

        tfKhoangNgay1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Từ"));
        tfKhoangNgay1.setPreferredSize(new java.awt.Dimension(80, 36));
        tfKhoangNgay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfKhoangNgay1ActionPerformed(evt);
            }
        });
        jPanel5.add(tfKhoangNgay1);
        jPanel5.add(dPicker1);

        tfKhoangNgay2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tới"));
        tfKhoangNgay2.setPreferredSize(new java.awt.Dimension(80, 36));
        tfKhoangNgay2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfKhoangNgay2ActionPerformed(evt);
            }
        });
        jPanel5.add(tfKhoangNgay2);
        jPanel5.add(dPicker2);

        jPanel3.add(jPanel5);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tổng tiền ( nghìn VND )"));
        jPanel7.setPreferredSize(new java.awt.Dimension(150, 70));
        jPanel7.setLayout(null);

        tfKhoangTien2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tới"));
        tfKhoangTien2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfKhoangTien2ActionPerformed(evt);
            }
        });
        jPanel7.add(tfKhoangTien2);
        tfKhoangTien2.setBounds(80, 20, 50, 36);

        tfKhoangTien1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Từ"));
        jPanel7.add(tfKhoangTien1);
        tfKhoangTien1.setBounds(20, 20, 50, 36);

        jPanel3.add(jPanel7);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel6.setPreferredSize(new java.awt.Dimension(1399, 100));

        jPanel9.setPreferredSize(new java.awt.Dimension(800, 100));

        tfMaHoaDon.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tfMaHoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Mã hóa đơn"));
        tfMaHoaDon.setPreferredSize(new java.awt.Dimension(120, 40));
        tfMaHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaHoaDonActionPerformed(evt);
            }
        });
        jPanel9.add(tfMaHoaDon);

        tfNhanVien.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tfNhanVien.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Nhân viên"));
        tfNhanVien.setPreferredSize(new java.awt.Dimension(170, 40));
        jPanel9.add(tfNhanVien);

        tfKhachHang.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tfKhachHang.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Khách hàng"));
        tfKhachHang.setPreferredSize(new java.awt.Dimension(170, 40));
        tfKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfKhachHangActionPerformed(evt);
            }
        });
        jPanel9.add(tfKhachHang);

        tfTongTien.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tfTongTien.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tổng tiền"));
        tfTongTien.setPreferredSize(new java.awt.Dimension(160, 40));
        tfTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTongTienActionPerformed(evt);
            }
        });
        jPanel9.add(tfTongTien);

        tfNgayLap.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tfNgayLap.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ngày lập"));
        tfNgayLap.setPreferredSize(new java.awt.Dimension(140, 40));
        tfNgayLap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNgayLapActionPerformed(evt);
            }
        });
        jPanel9.add(tfNgayLap);

        jPanel6.add(jPanel9);

        jPanel1.add(jPanel6, java.awt.BorderLayout.CENTER);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 550));

        tbHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã hóa đơn", "Mã nhân viên", "Mã khách hàng", "Mã khuyến mãi", "Ngày Lập", "Tổng tiền"
            }
        ));
        tbHoaDon.setFillsViewportHeight(true);
        tbHoaDon.setRowHeight(40);
        tbHoaDon.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tbHoaDon.setShowGrid(true);
        jScrollPane1.setViewportView(tbHoaDon);
        if (tbHoaDon.getColumnModel().getColumnCount() > 0) {
            tbHoaDon.getColumnModel().getColumn(0).setMaxWidth(70);
            tbHoaDon.getColumnModel().getColumn(1).setMaxWidth(175);
            tbHoaDon.getColumnModel().getColumn(2).setMaxWidth(175);
            tbHoaDon.getColumnModel().getColumn(3).setMaxWidth(175);
            tbHoaDon.getColumnModel().getColumn(4).setMaxWidth(175);
            tbHoaDon.getColumnModel().getColumn(5).setMaxWidth(175);
            tbHoaDon.getColumnModel().getColumn(6).setMaxWidth(175);
        }

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.PAGE_END);
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(8);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void cbTypeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeSearchActionPerformed
        tfTim.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),cbTypeSearch.getSelectedItem().toString()));
        tfTim.requestFocus();
        if (!tfTim.getText().equals("")) {
            tfSearchOnChange();
        }
    }//GEN-LAST:event_cbTypeSearchActionPerformed

    private void tfKhoangNgay2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfKhoangNgay2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfKhoangNgay2ActionPerformed

    private void tfKhoangTien2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfKhoangTien2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfKhoangTien2ActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ThemSuaHoaDonForm themhd = new ThemSuaHoaDonForm("Thêm", "");
        themhd.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                qlhd.readDB();
                setDataToTable(qlhd.getDshd()); // refresh
            }
        });
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            String mahd = (String) tbHoaDon.getValueAt(tbHoaDon.getSelectedRow(), 1);
            if (mahd != null) {
                ThemSuaHoaDonForm tshd = new ThemSuaHoaDonForm("Sửa", mahd);
                tshd.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosed(WindowEvent e) {
                        qlhd.readDB();
                        setDataToTable(qlhd.getDshd()); // refresh
                    }
                });
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Chưa chọn hóa đơn nào để sửa");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            String mahd = (String) tbHoaDon.getValueAt(tbHoaDon.getSelectedRow(), 1);
            if (mahd != null) {
                if (JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa hóa đơn " + mahd
                        + " ? Mọi chi tiết trong hóa đơn sẽ bị xóa theo",
                        "Chú ý", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {

                    new QuanLyChiTietHoaDonBUS().deleteAll(mahd);
                    new QuanLyHoaDonBUS().delete(mahd);
                    qlhd.readDB();
                    setDataToTable(qlhd.getDshd()); // refresh
                }
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Chưa chọn sản phẩm nào để xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tfMaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaHoaDonActionPerformed

    private void tfKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfKhachHangActionPerformed

    private void tfTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTongTienActionPerformed

    private void tfNgayLapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNgayLapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNgayLapActionPerformed

    private void tfKhoangNgay1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfKhoangNgay1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfKhoangNgay1ActionPerformed

    private void btnPrintPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintPDFActionPerformed
        if (tbHoaDon.getSelectedRow() != -1) {
                new WritePDF().writeHoaDon(String.valueOf(tbHoaDon.getValueAt(tbHoaDon.getSelectedRow(), 1)));
            } else {
                JOptionPane.showMessageDialog(null, "Chưa chọn hóa đơn nào để in");
            }
    }//GEN-LAST:event_btnPrintPDFActionPerformed

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        new XuatExcel().xuatFileExcelHoaDon();
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    private void btnNhapExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapExcelActionPerformed
        JOptionPane.showMessageDialog(this, "Chức năng chưa hoàn thành!");
    }//GEN-LAST:event_btnNhapExcelActionPerformed

    
    private void setDataToTable(ArrayList<HoaDon> data) {
        mdtb1.setRowCount(0); // xóa table hiện có
        int stt = 1; // lưu số thứ tự dòng hiện tại
        for (HoaDon hd : data) {
            mdtb1.addRow(new String[]{
                String.valueOf(stt),
                hd.getMaHoaDon(),
                hd.getMaNhanVien(),
                hd.getMaKhachHang(),
                String.valueOf(hd.getNgayLap()),
                PriceFormatter.format(hd.getTongTien())});
            stt++;
        }
    }
    
    private void showInfo(String mahd) {
        if (mahd != null) {
            // show hình
            for (HoaDon hd : qlhd.getDshd()) {
                if (hd.getMaHoaDon().equals(mahd)) {
                    // show info
                    String tennhanvien = qlnvBUS.getNhanVien(hd.getMaNhanVien()).getTenNV();
                    String tenkhach = qlkhBUS.getKhachHang(hd.getMaKhachHang()).getTenKH();

                    tfMaHoaDon.setText(hd.getMaHoaDon());
                    tfNhanVien.setText(tennhanvien + " - " + hd.getMaNhanVien());
                    tfKhachHang.setText(tenkhach + " - " + hd.getMaKhachHang());
                    tfNgayLap.setText(hd.getNgayLap().toString());
                    tfTongTien.setText(PriceFormatter.format(hd.getTongTien()));
                    return;
                }
            }
        }
    }
    
    private void addDocumentListener(JTextField txField) {
        txField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                tfSearchOnChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                tfSearchOnChange();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                tfSearchOnChange();
            }
        });
    }
    
    private void tfSearchOnChange() {
        LocalDate ngay1 = null, ngay2 = null;
        int tong1 = -1, tong2 = -1;
        try {
            ngay1 = java.time.LocalDate.parse(tfKhoangNgay1.getText());
            tfKhoangNgay1.setForeground(Color.black);
        } catch (DateTimeParseException e) {
            tfKhoangNgay1.setForeground(Color.red);
        }
        try {
            ngay2 = java.time.LocalDate.parse(tfKhoangNgay2.getText());
            tfKhoangNgay2.setForeground(Color.black);
        } catch (DateTimeParseException e) {
            tfKhoangNgay2.setForeground(Color.red);
        }
        try {
            tong1 = Integer.parseInt(tfKhoangTien1.getText());
            tfKhoangTien1.setForeground(Color.black);
        } catch (NumberFormatException e) {
            tfKhoangTien1.setForeground(Color.red);
        }
        try {
            tong2 = Integer.parseInt(tfKhoangTien2.getText());
            tfKhoangTien2.setForeground(Color.black);
        } catch (NumberFormatException e) {
            tfKhoangTien2.setForeground(Color.red);
        }
        setDataToTable(qlhd.search(cbTypeSearch.getSelectedItem().toString(), tfTim.getText(), ngay1, ngay2, tong1, tong2));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNhapExcel;
    private javax.swing.JButton btnPrintPDF;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JComboBox<String> cbTypeSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTextField tfKhachHang;
    private javax.swing.JTextField tfKhoangNgay1;
    private javax.swing.JTextField tfKhoangNgay2;
    private javax.swing.JTextField tfKhoangTien1;
    private javax.swing.JTextField tfKhoangTien2;
    private javax.swing.JTextField tfMaHoaDon;
    private javax.swing.JTextField tfNgayLap;
    private javax.swing.JTextField tfNhanVien;
    private javax.swing.JTextField tfTim;
    private javax.swing.JTextField tfTongTien;
    // End of variables declaration//GEN-END:variables
}
